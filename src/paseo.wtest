import prendas.*
import ninio.*
import familia.*
import juguete.*
import talles.*


describe "test " {

//NOTA: Este fixture est치 incompleto y sirve para comenzar a testear el examen.
//Es a modo de ayuda, pero no es obligatorio respetar este escenario. 
// Puede modificarse tanto como sea necesario.

	var mediaIzquierda = new PrendaIzquierda() //elemento de par
	var mediaDerecha = new PrendaDerecha()
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendaPares() 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapatillasZoe = new PrendaPares() 
	var zapIzq =new PrendaIzquierda()
	var zapDer = new PrendaDerecha()
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new PrendaPesada()
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new PrendaLiviana() 
	// prenda pesada con desgaste default: 0
	var camperaZoe = new PrendaPesada() 

	//un juguete para ni침os de 5 a 100 anios
	var ukelele = new JugueteDeMano(edadMinima=5, edadMaxima=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new PrendaLiviana()
	//prenda liviana con desgaste default: 0
	var calzaMilena = new PrendaLiviana() //prenda liviana

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotasMilena = new PrendaPares() 
	
	//ninio
	var zoe = new Ninio() 
	//ninio problematico
	var milena = new NinioProblematico()
	
	//familia	
	var familiaAptaSalir = new Familia()

	//familia	
	var familiaNoAptaParaSalir= new Familia()
	
	fixture {
		mediaIzquierda.asignarDesgaste(2)
		mediaDerecha.asignarDesgaste(2)
		mediaIzquierda.asignarAbrigo(2)
		mediaDerecha.asignarAbrigo(2)
		mediasZoe.asignarTalle(l)
		mediasZoe.asignarPrendaIzquierda(mediaIzquierda)
		mediasZoe.asignarPrendaDerecha(mediaDerecha)
		
		zapIzq.asignarDesgaste(0)
		zapDer.asignarDesgaste(0)
		zapIzq.asignarAbrigo(0)
		zapDer.asignarAbrigo(0)
		zapatillasZoe.asignarTalle(l)
		zapatillasZoe.asignarPrendaIzquierda(zapIzq)
		zapatillasZoe.asignarPrendaDerecha(zapDer)
		
		
		jeanZoe.asignarAbrigo(1)
		jeanZoe.asignarTalle(l)	
		jeanZoe.asignarDesgaste(1)
		
		familiaAptaSalir.aniadirNinio(zoe)
		
		
		}
	
//PUNTO 1	
	test "comodidad" {
		assert.equals(6 , mediasZoe.comodidad(zoe)/* comodida de las mediasZoe */ )
		assert.equals(2, mediasZoe.desgaste())
		assert.equals(8, mediasZoe.talleCoincide(zoe))
		assert.equals(8 ,jeanZoe.comodidad(zoe))

	}

////PUNTO 2		
test "intercambiar pares ok" {
		mediasZoe.intercambiarPares(zapatillasZoe)
		assert.equals(zapDer, mediasZoe.prendaDerecha())
	}


////PUNTO 3	
	test "nivel de abrigo" {
		assert.equals(0 ,zapatillasZoe.abrigo())
		assert.equals(4 , mediasZoe.abrigo())
	}
//
////PUNTO 4		
	test "puede salir de paseo" {
		//No puede salir porque no tiene 5 prendas. No se modela por falta de tiempo
		assert.equals(false, familiaAptaSalir.puedeSalirDePaseo())
}
////PUNTO 5
//	
	test "infaltables" {
		assert.equals(#{jeanZoe}, familiaAptaSalir.prendasInfaltables())		
	}
//PUNTO 7
	test "chiquitos" {
		assert.equals(#{zoe}, familiaAptaSalir.niniosChiquitos())		
	}
//	
////PUNTO 6	
//test "salir de paseo ok" {
//		familiaAptaSalir.pasear()
//		assert.equals(1.8 , mediaIzquierda.desgaste())
//		assert.equals(4.2 , mediaDerecha.desgaste())
//		assert.equals(3 , mediasZoe.desgaste())
//		assert.equals(1 , zapatillasZoe.desgaste())
//		assert.equals(1 , jeanZoe.desgaste())
//		assert.equals(1 , remeraZoe.desgaste())
//		assert.equals(1 , camperaZoe.desgaste())
//		
//	}
////PUNTO 8
//	test "salir de paseo no ok" {
//		//Que sucede si le pido pasear a una familia que no est치 lista?
//		//El test est치 incompleto!
//		familiaNoAptaParaSalir.pasear()
//	}
	
	
	//No se completan los test faltantes por falta de tiempo
	
}